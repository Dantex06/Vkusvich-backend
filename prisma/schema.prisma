// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  email String @unique
  hash String
  salt String
  avatarUrl String?
  account Account?
}

model Account {
  id Int @id @default(autoincrement())
  name String
  ownerId Int @unique
  owner User @relation(fields: [ownerId], references: [id])
  isBlocking Boolean
  role Role? @relation(fields: [roleId], references: [id])
  roleId Int?
  recipes Recipe[]
  comments Comment[]
}

model Role {
  id Int @id @default(autoincrement())
  name String    @unique
  accounts Account[]
}

model Recipe {
  id Int @id @default(autoincrement())
  title String
  description String
  owner Account @relation(fields: [ownerId], references: [id])
  ownerId Int
  imageUrl String?
  likes Int
  comments Comment[]
  categories Category[]
  createdAt DateTime
}

model Comment {
  id Int @id @default(autoincrement())
  user Account @relation(fields: [userId], references: [id])
  userId Int
  message String
  likes Int
  recipe Recipe? @relation(fields: [recipeId], references: [id])
  recipeId Int?
}

model Category {
  id Int @id @default(autoincrement())
  name String
  recipes Recipe[]
}